// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pharmacy.Data;

namespace Pharmacy.Data.Migrations
{
    [DbContext(typeof(PharmaciyDbContext))]
    partial class PharmaciyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pharmacy.Models.DrugMedicament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenericId");

                    b.Property<string>("Measure");

                    b.Property<string>("PackingContent");

                    b.Property<string>("TradeName");

                    b.HasKey("Id");

                    b.HasIndex("GenericId");

                    b.ToTable("DrugMedicaments");
                });

            modelBuilder.Entity("Pharmacy.Models.Drugstore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("DrugsLicense");

                    b.Property<string>("Name");

                    b.Property<string>("PharmacyLicense");

                    b.HasKey("Id");

                    b.ToTable("Pharmacies");
                });

            modelBuilder.Entity("Pharmacy.Models.GenericMedicament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("GenericMedicaments");
                });

            modelBuilder.Entity("Pharmacy.Models.PurchasedAndSoldDrugMedicament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvailabilityAtTheBeginning");

                    b.Property<int>("AvailabilityAtTheEnd");

                    b.Property<int?>("DrugId");

                    b.Property<int>("DrugMendicamentId");

                    b.Property<int>("PharmacyId");

                    b.Property<int>("PurchasedQuantity");

                    b.Property<int>("ReportingPeriod");

                    b.Property<int>("SoldQuantity");

                    b.HasKey("Id");

                    b.HasIndex("DrugId");

                    b.HasIndex("PharmacyId");

                    b.ToTable("PurchasedAndSoldDrugs");
                });

            modelBuilder.Entity("Pharmacy.Models.DrugMedicament", b =>
                {
                    b.HasOne("Pharmacy.Models.GenericMedicament", "Generic")
                        .WithMany("Drugs")
                        .HasForeignKey("GenericId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pharmacy.Models.PurchasedAndSoldDrugMedicament", b =>
                {
                    b.HasOne("Pharmacy.Models.DrugMedicament", "Drug")
                        .WithMany("Reports")
                        .HasForeignKey("DrugId");

                    b.HasOne("Pharmacy.Models.Drugstore", "Pharmacy")
                        .WithMany("Reports")
                        .HasForeignKey("PharmacyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
